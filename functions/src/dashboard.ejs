<%- include('template/header') -%>

<style>
table {
	font-family: arial, sans-serif;
	border-collapse: collapse;
	width: 100%;
}

td, th {
	border: 1px solid #dddddd;
	text-align: left;
	padding: 8px;
}

tr:nth-child(even) {
	background-color: #dddddd;
}

table td input {
  display: block;
  width: 100%;
}

.cover {
	object-fit: cover;
	width: 100px;
	height: 100px;
}
</style>

<center>
	<br/><br/>
	<img src="/placeholder_user.png" width="100px" height="100px" class="cover" id="avatar" />
	<br/>

	<%=data.email%>
	<br/><br/>

	<progress value="0" max="100" id="uploader">0%</progress>
	<br/>
	<input type="file" value="upload" accept="image/*" id="fileButton" />

	<br/><br/>
	<a href="/sign_out"><button>Выйти</button></a> <a href="/delete"><button>Удалить аккаунт</button></a>
	<hr/>

	<table id="TableAdd">
		<tr>
			<th width="200px"></th>
			<th></th>
			<th width="80px"></th>
		</tr>
		<tr>
			<td><input type="text" placeholder="Заголовок" id="todo_title"></td>
			<td><input type="text" placeholder="Текст" id="todo_text"></td>
			<td><button onclick="todo.add()">Добавить</button></td>
		</tr>
	</table>

	<table id="TableView">
		<tr>
			<th>Заголовок</th>
			<th width="80px">Удалить</th>
		</tr>
	</table>
</center>


<script src="https://www.gstatic.com/firebasejs/7.14.4/firebase-app.js"></script>
<script src="https://www.gstatic.com/firebasejs/7.14.4/firebase-firestore.js"></script>
<script src="https://www.gstatic.com/firebasejs/7.14.4/firebase-storage.js"></script>
<!-- Initialize Firebase -->
<script type="text/javascript">
	// Your web app's Firebase configuration
	const projID = "arnunan-e1468";
	var firebaseConfig = {
		apiKey: "AIzaSyAN5c71iAzIHAoFl-ziGska43-lFva3p-Q",
		authDomain: "fireui-c746a.firebaseapp.com",
		databaseURL: "https://fireui-c746a.firebaseio.com",
		projectId: "fireui-c746a",
		storageBucket: "fireui-c746a.appspot.com",
		messagingSenderId: "756887058166",
		appId: "1:756887058166:web:af5835a878ee850f38ded7"
    };

	// Initialize Firebase
	firebase.initializeApp(firebaseConfig);
	const db = firebase.firestore()
	const storage = firebase.storage()

	// Get Elements
	var avatar = document.getElementById('avatar');
	var uploader = document.getElementById('uploader');
	var fileButton = document.getElementById('fileButton');

	// Listen
	fileButton.addEventListener('change', function(e){

		// Get file
		var file = e.target.files[0]

		// Create a stoarge ref
		var storageRef = storage.ref('avatars/<%=data.uid%>/'+file.name) 

		// Upload File
		var task = storageRef.put(file)

		// Update progress bar
		task.on('state_changed', 

			function progress(snapshot){

				var percentage = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;
				uploader.value = percentage
			},

			function error(err){

			},

			function completed(){

				uploadCompleted(storageRef)
			}
		);
	})

	// Get the download URL
	function uploadCompleted(ref) {

		ref.getDownloadURL()
		.then(function(url) 
		{
			avatar.src = url

			db.collection("users").doc("<%=data.uid%>").set({
				avatar: 
				{
					path: ref.fullPath,
					url: url
				}
			})
			.then(function() 
			{
				uploader.value = 0
			})
			.catch(function(error) 
			{

			})
		})
		.catch(function(error) 
		{

		})
	}
</script>


<script type="text/javascript">
	
	// Get Profile
	db.collection("users").doc("<%=data.uid%>").get()
	.then(function(snapshot)
	{
		if (snapshot.exists)
		{
			const data = snapshot.data()

			if (data.avatar && typeof data.avatar === "object")
			{
				avatar.src = data.avatar.url
			}
		}
	})
	.catch(function(error)
	{
		console.log(error)
	})

	// ToDo
	var todo = {

		listener: function()
		{
			db.collection("ToDo").onSnapshot(function(snapshot) 
			{
				snapshot.docChanges().forEach(function(change) 
				{
					var id = change.doc.id;
					var data = change.doc.data();

					if (change.type === "added") 
					{
						var data = '<tr id="'+id+'"> \
										<td><a href="/detail/'+id+'">'+data.title+'</a></td> \
										<td><button onclick="todo.delete(\''+id+'\')">Удалить</button></td> \
									</tr>';
						document.getElementById("TableView").innerHTML += data;

					}
					else if (change.type === "removed") 
					{
						document.getElementById(id).remove();
					}
				})

			}, function(error)
			{

			})
		},

		add: function()
		{
			var title = document.getElementById('todo_title')
			var text = document.getElementById('todo_text')
			const titleText = title.value.trim()
			const textText = text.value.trim()

			if (titleText.length > 0)
			{
				db.collection("ToDo").doc().set({
					title: titleText,
					text: textText,
					date: 
					{
						addedAt: firebase.firestore.FieldValue.serverTimestamp(),
						updatedAt: firebase.firestore.FieldValue.serverTimestamp(),
					}
				})
				.then(function()
				{
					title.value = ""
					text.value = ""
				})
				.catch(function()
				{

				})
			}
		},

		delete: function(id)
		{
			db.collection("ToDo").doc(id).delete()
		}
	}

	todo.listener()
</script>

<%- include('template/footer') -%>
